{
	"info": {
		"_postman_id": "4c6799e7-d513-4535-90b8-1738fb073ba3",
		"name": "transactify_zluri",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25080078"
	},
	"item": [
		{
			"name": "upload entries",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/vssar/Downloads/expenses_new_1.csv"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/transaction/upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"transaction",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "get paginated items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if the response body has the \"transactions\" key\r",
							"pm.test(\"Response body should have the 'transactions' key\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('transactions');\r",
							"});\r",
							"\r",
							"// Test to check if the \"transactions\" array has a length of 10\r",
							"pm.test(\"Length of 'transactions' array should be 10\", function () {\r",
							"    pm.expect(pm.response.json().transactions).to.have.lengthOf(10);\r",
							"});\r",
							"\r",
							"// Set a random id variable to the collection variables\r",
							"pm.collectionVariables.set(\"randomId\",pm.response.json().transactions[0].id );\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/transaction?page=1&limit=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"transaction"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get item by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/transaction/{{randomId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"transaction",
						"{{randomId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if the response body has the \"transactions\" key\r",
							"pm.test(\"amount is updated\", function () {\r",
							"    pm.expect(pm.response.json()).amount = 300;\r",
							"});\r",
							"\r",
							"// Test to check if the \"transactions\" array has a length of 10\r",
							"pm.test(\"description is updated\", function () {\r",
							"    pm.expect(pm.response.json()).description = \"updated text\"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "amount",
							"value": "300",
							"type": "text"
						},
						{
							"key": "description",
							"value": "updated text",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/vssar/Downloads/expenses_new_1.csv"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/transaction/{{randomId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"transaction",
						"{{randomId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "randomId",
			"value": ""
		}
	]
}